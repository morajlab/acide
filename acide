#!/usr/bin/env php

<?php
    $composer_needle_array = [
        'init' ,
        'upgrade'
    ];

    if((!file_exists('./vendor/autoload.php') && sizeof($argv) === 1) ||
        (sizeof($argv) == 2 && in_array($argv[1] , $composer_needle_array))) {
        exec('composer install');
    }

    require 'vendor/autoload.php';

    use Illuminate\Container\Container;
    use Illuminate\Events\Dispatcher;
    use Illuminate\Console\Application;
    use ACFileManager\Src\File;
    use ACIDECore\App\StringFactory;
    use ACIDECore\App\Config;

    try {
        $container = new Container;
        $events = new Dispatcher($container);

        $artisan = new Application($container, $events, 'Version 1');
        $artisan->setName('ACID-E Console Application');

        foreach(File::getFiles(Config::get('path.command')) as $command) {
            $command = StringFactory::lastReplace('.php' ,'' ,File::getBaseName($command));
            $artisan->resolve(Config::get('namespaces.command') . $command);
        }

        $artisan->run();
    } catch (Exception $exception) {
        echo $exception->getMessage();
    }
?>